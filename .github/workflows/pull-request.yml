name: Pull Request

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write

    steps:
    - name: Checkout  
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Build
      run: dotnet build --configuration Release

    - name: Test
      run: dotnet test --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage" --results-directory ./coverage || true

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Report
        path: "**/test-results.trx"                            
        reporter: dotnet-trx
        fail-on-error: false

    - name: Copy Coverage To Predictable Location
      run: cp coverage/**/coverage.cobertura.xml coverage.xml

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.12
      with:
        reports: 'coverage.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline;Cobertura;MarkdownSummary' 

    - name: Publish coverage summary
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        path: coveragereport/Summary.md

    - name: Create CheckRun for code Coverage
      uses: LouisBrunner/checks-action@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Code Coverage
        conclusion: ${{ job.status }}
        output: "{\"summary\":\"Code Coverage\"}"
        output_text_description_file: coveragereport/Summary.md            